{"version":3,"sources":["utils.js","components/FoodList.js","components/LoginForm.js","components/MyCart.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","Option","Select","AddToCartButton","itemId","useState","loading","setLoading","title","type","icon","PlusOutlined","onClick","addItemToCart","message","success","catch","err","error","finally","FoodList","foodData","setFoodData","curRest","setCurRest","restaurants","setRestaurants","loadingRest","setLoadingRest","useEffect","json","data","restId","value","onSelect","placeholder","style","width","onChange","map","item","id","name","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","extra","src","imageUrl","alt","height","display","price","LoginForm","state","onFinish","setState","props","onSuccess","render","margin","rules","required","prefix","UserOutlined","Password","LockOutlined","htmlType","React","Component","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","description","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7200f55a.chunk.js","sourcesContent":["export const login = (credential) => {\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\n\n    return fetch(loginUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to log in\");\n        }\n    });\n    // fetch: request data from backend\n};\n\nexport const getMenus = (restId) => {\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get menus\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const getRestaurants = () => {\n    return fetch(\"/restaurants\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get restaurants\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const getCart = () => {\n    return fetch(\"/cart\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get shopping cart data\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const checkout = () => {\n    return fetch(\"/checkout\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to checkout\");\n        }\n    });\n};\n\nexport const addItemToCart = (itemId) => {\n    return fetch(`/order/${itemId}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to add menu item to shopping cart\");\n        }\n    });\n};\n","import { Button, Card, List, message, Select, Tooltip } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { addItemToCart, getMenus, getRestaurants } from \"../utils\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nconst { Option } = Select;\n\nconst AddToCartButton = ({ itemId }) => {\n    const [loading, setLoading] = useState(false);\n\n    const AddToCart = () => {\n        setLoading(true);\n        addItemToCart(itemId)\n            .then(() => message.success(`Successfully add item`))\n            .catch((err) => message.error(err.message))\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Tooltip title=\"Add to shopping cart\">\n            <Button\n                loading={loading}\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={AddToCart}\n            />\n        </Tooltip>\n    );\n};\n\nconst FoodList = () => {\n    const [foodData, setFoodData] = useState([]);\n    const [curRest, setCurRest] = useState();\n    const [restaurants, setRestaurants] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [loadingRest, setLoadingRest] = useState(false);\n\n    useEffect(() => {\n        setLoadingRest(true);\n        getRestaurants()\n            .then((data) => {\n                setRestaurants(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoadingRest(false);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (curRest) {\n            setLoading(true);\n            getMenus(curRest)\n                .then((data) => {\n                    setFoodData(data);\n                })\n                .catch((err) => {\n                    message.error(err.message);\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, [curRest]);\n\n    return (\n        <>\n            <Select\n                value={curRest}\n                onSelect={(value) => setCurRest(value)}\n                placeholder=\"Select a restaurant\"\n                loading={loadingRest}\n                style={{ width: 300 }}\n                onChange={() => { }}\n            >\n                {restaurants.map((item) => {\n                    return <Option value={item.id}>{item.name}</Option>;\n                })}\n            </Select>\n            {curRest && (\n                <List\n                    style={{ marginTop: 20 }}\n                    loading={loading}\n                    grid={{\n                        gutter: 16,\n                        xs: 1,\n                        sm: 2,\n                        md: 4,\n                        lg: 4,\n                        xl: 3,\n                        xxl: 3,\n                    }}\n                    dataSource={foodData}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <Card\n                                title={item.name}\n                                extra={<AddToCartButton itemId={item.id} />}\n                            >\n                                <img\n                                    src={item.imageUrl}\n                                    alt={item.name}\n                                    style={{ height: 340, width: \"100%\", display: \"block\" }}\n                                />\n                                {`Price: ${item.price}`}\n                            </Card>\n                        </List.Item>\n                    )}\n                />\n            )}\n        </>\n    );\n};\n\nexport default FoodList;","import { Button, Form, Input, message } from \"antd\";\nimport React from \"react\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { login } from \"../utils\";\n\nclass LoginForm extends React.Component {\n    state = {\n        loading: false,\n    };\n\n    onFinish = (data) => {\n        this.setState({\n            loading: true,\n        });\n        login(data)\n            .then(() => {\n                message.success(`Login Successful`);\n                this.props.onSuccess();\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                this.setState({\n                    loading: false,\n                });\n            });\n    };\n\n    render = () => {\n        return (\n            <Form\n                name=\"normal_login\"\n                onFinish={this.onFinish}\n                style={{\n                    width: 300,\n                    margin: \"auto\",\n                }}\n            >\n                <Form.Item\n                    name=\"username\"\n                    rules={[{ required: true, message: \"Please input your Username!\" }]}\n                >\n                    <Input prefix={<UserOutlined />} placeholder=\"Username\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[{ required: true, message: \"Please input your Password!\" }]}\n                >\n                    <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading}>\n                        Login\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    };\n}\n\nexport default LoginForm;","import { Button, Drawer, List, message, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { checkout, getCart } from \"../utils\";\n\nconst { Text } = Typography;\n\nconst MyCart = () => {\n    const [cartVisible, setCartVisible] = useState(false);\n    const [cartData, setCartData] = useState();\n    const [loading, setLoading] = useState(false);\n    const [checking, setChecking] = useState(false);\n\n    useEffect(() => {\n        if (!cartVisible) {\n            return;\n        }\n\n        setLoading(true);\n        getCart()\n            .then((data) => {\n                setCartData(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [cartVisible]);\n\n    const onCheckOut = () => {\n        setChecking(true);\n        checkout()\n            .then(() => {\n                message.success(\"Successfully checkout\");\n                setCartVisible(false);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setChecking(false);\n            });\n    };\n\n    const onCloseDrawer = () => {\n        setCartVisible(false);\n    };\n\n    const onOpenDrawer = () => {\n        setCartVisible(true);\n    };\n\n    return (\n        <>\n            <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\n                Cart\n            </Button>\n            <Drawer\n                title=\"My Shopping Cart\"\n                onClose={onCloseDrawer}\n                visible={cartVisible}\n                width={520}\n                footer={\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        <Text strong={true}>{`Total price: $${cartData?.totalPrice}`}</Text>\n                        <div>\n                            <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\n                                Cancel\n                            </Button>\n                            <Button\n                                onClick={onCheckOut}\n                                type=\"primary\"\n                                loading={checking}\n                                disabled={loading || cartData?.orderItemList.length === 0}\n                            >\n                                Checkout\n                            </Button>\n                        </div>\n                    </div>\n                }\n            >\n                <List\n                    loading={loading}\n                    itemLayout=\"horizontal\"\n                    dataSource={cartData?.orderItemList}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <List.Item.Meta\n                                title={item.menuItem.name}\n                                description={`$${item.price}`}\n                            />\n                        </List.Item>\n                    )}\n                />\n            </Drawer>\n        </>\n    );\n};\n\nexport default MyCart;","import { Layout, Typography } from \"antd\";\nimport { useState } from \"react\";\nimport FoodList from \"./components/FoodList\";\nimport LoginForm from \"./components/LoginForm\";\nimport MyCart from \"./components/MyCart\";\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n\nfunction App() {\n  const [authed, setAuthed] = useState(false);\n\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      <Header>\n        <div className=\"header\" style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Title\n            level={2}\n            style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}\n          >\n            Lai Food\n          </Title>\n          {authed && (\n            <div>\n              <MyCart />\n            </div>\n          )}\n        </div>\n      </Header>\n      <Content\n        style={{\n          padding: \"50px\",\n          maxHeight: \"calc(100% - 64px)\",\n          overflowY: \"auto\",\n        }}\n      >\n        {authed ? (\n          <FoodList />\n        ) : (\n          <LoginForm onSuccess={() => setAuthed(true)} />\n        )}\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}